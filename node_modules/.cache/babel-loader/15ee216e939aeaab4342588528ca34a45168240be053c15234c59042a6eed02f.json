{"ast":null,"code":"var _jsxFileName = \"/home/aashi/Desktop/kanban-board/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import './App.css';\n// import KanbanBoard from './components/KanbanBoard';\n// import GroupControls from './components/GroupControls';\n// import { fetchTickets } from './services/api';\n\n// function App() {\n//   const [tickets, setTickets] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   const [groupBy, setGroupBy] = useState('status');\n//   const [sortOption, setSortOption] = useState('priority');\n\n//   // Fetch tickets and users\n//   useEffect(() => {\n//     const loadData = async () => {\n//       const data = await fetchTickets();\n//       if (data) {\n//         setTickets(data.tickets);\n//         setUsers(data.users);\n//       }\n//     };\n//     loadData();\n//   }, []);\n\n//   return (\n//     <div className=\"app\">\n//       <GroupControls onGroupChange={setGroupBy} onSortChange={setSortOption} />\n//       <KanbanBoard tickets={tickets} users={users} groupBy={groupBy} sortBy={sortOption} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useEffect, useState } from 'react';\n// import KanbanBoard from './components/KanbanBoard';\n// //import DisplayOptions from './components/DisplayOptions';\n// import './App.css';\n\n// const App = () => {\n//   const [tickets, setTickets] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   const [groupBy, setGroupBy] = useState('Status');\n//   const [sortBy, setSortBy] = useState('Priority');\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch data from the API\n//   useEffect(() => {\n//     const fetchTickets = async () => {\n//       try {\n//         const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n//         const data = await response.json();\n//         setTickets(data.tickets);\n//         setUsers(data.users);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching tickets:', error);\n//       }\n//     };\n//     fetchTickets();\n//   }, []);\n\n//   // Map userId to user name for display purposes\n//   const getUserById = (userId) => {\n//     const user = users.find((user) => user.id === userId);\n//     return user ? user.name : 'Unknown';\n//   };\n\n//   // Pass the tickets and user mapping to KanbanBoard\n//   return (\n//     <div className=\"app\">\n//       <div className=\"controls\">\n//         <label>\n//           Group by:\n//           <select value={groupBy} onChange={(e) => setGroupBy(e.target.value)}>\n//             <option value=\"Status\">Status</option>\n//             <option value=\"User\">User</option>\n//             <option value=\"Priority\">Priority</option>\n//           </select>\n//         </label>\n\n//         <label>\n//           Sort by:\n//           <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n//             <option value=\"Priority\">Priority</option>\n//             <option value=\"Title\">Title</option>\n//           </select>\n//         </label>\n//       </div>\n\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <KanbanBoard tickets={tickets} groupBy={groupBy} sortBy={sortBy} getUserById={getUserById} />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useEffect, useState } from 'react';\nimport KanbanBoard from './components/KanbanBoard';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('Status');\n  const [sortBy, setSortBy] = useState('Priority');\n  const [loading, setLoading] = useState(true);\n\n  // Fetch data from the API\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const data = await response.json();\n        setTickets(data.tickets);\n        setUsers(data.users);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching tickets:', error);\n      }\n    };\n    fetchTickets();\n  }, []);\n\n  // Map userId to user name for display purposes\n  const getUserById = userId => {\n    const user = users.find(user => user.id === userId);\n    return user ? user.name : 'Unknown';\n  };\n\n  // Pass the tickets and user mapping to KanbanBoard\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Group by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: groupBy,\n          onChange: e => setGroupBy(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Status\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"User\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortBy,\n          onChange: e => setSortBy(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Priority\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(KanbanBoard, {\n      tickets: tickets,\n      groupBy: groupBy,\n      sortBy: sortBy,\n      getUserById: getUserById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"idKV8zNDarTDxE9hRqmo2k0JuoU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","KanbanBoard","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","users","setUsers","groupBy","setGroupBy","sortBy","setSortBy","loading","setLoading","fetchTickets","response","fetch","data","json","error","console","getUserById","userId","user","find","id","name","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/aashi/Desktop/kanban-board/src/App.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import './App.css';\n// import KanbanBoard from './components/KanbanBoard';\n// import GroupControls from './components/GroupControls';\n// import { fetchTickets } from './services/api';\n\n// function App() {\n//   const [tickets, setTickets] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   const [groupBy, setGroupBy] = useState('status');\n//   const [sortOption, setSortOption] = useState('priority');\n\n//   // Fetch tickets and users\n//   useEffect(() => {\n//     const loadData = async () => {\n//       const data = await fetchTickets();\n//       if (data) {\n//         setTickets(data.tickets);\n//         setUsers(data.users);\n//       }\n//     };\n//     loadData();\n//   }, []);\n\n//   return (\n//     <div className=\"app\">\n//       <GroupControls onGroupChange={setGroupBy} onSortChange={setSortOption} />\n//       <KanbanBoard tickets={tickets} users={users} groupBy={groupBy} sortBy={sortOption} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// import React, { useEffect, useState } from 'react';\n// import KanbanBoard from './components/KanbanBoard';\n// //import DisplayOptions from './components/DisplayOptions';\n// import './App.css';\n\n// const App = () => {\n//   const [tickets, setTickets] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   const [groupBy, setGroupBy] = useState('Status');\n//   const [sortBy, setSortBy] = useState('Priority');\n//   const [loading, setLoading] = useState(true);\n\n//   // Fetch data from the API\n//   useEffect(() => {\n//     const fetchTickets = async () => {\n//       try {\n//         const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n//         const data = await response.json();\n//         setTickets(data.tickets);\n//         setUsers(data.users);\n//         setLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching tickets:', error);\n//       }\n//     };\n//     fetchTickets();\n//   }, []);\n\n//   // Map userId to user name for display purposes\n//   const getUserById = (userId) => {\n//     const user = users.find((user) => user.id === userId);\n//     return user ? user.name : 'Unknown';\n//   };\n\n//   // Pass the tickets and user mapping to KanbanBoard\n//   return (\n//     <div className=\"app\">\n//       <div className=\"controls\">\n//         <label>\n//           Group by:\n//           <select value={groupBy} onChange={(e) => setGroupBy(e.target.value)}>\n//             <option value=\"Status\">Status</option>\n//             <option value=\"User\">User</option>\n//             <option value=\"Priority\">Priority</option>\n//           </select>\n//         </label>\n\n//         <label>\n//           Sort by:\n//           <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n//             <option value=\"Priority\">Priority</option>\n//             <option value=\"Title\">Title</option>\n//           </select>\n//         </label>\n//       </div>\n\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <KanbanBoard tickets={tickets} groupBy={groupBy} sortBy={sortBy} getUserById={getUserById} />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\nimport React, { useEffect, useState } from 'react';\nimport KanbanBoard from './components/KanbanBoard';\nimport './App.css';\n\nconst App = () => {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('Status');\n  const [sortBy, setSortBy] = useState('Priority');\n  const [loading, setLoading] = useState(true);\n\n  // Fetch data from the API\n  useEffect(() => {\n    const fetchTickets = async () => {\n      try {\n        const response = await fetch('https://api.quicksell.co/v1/internal/frontend-assignment');\n        const data = await response.json();\n        setTickets(data.tickets);\n        setUsers(data.users);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching tickets:', error);\n      }\n    };\n    fetchTickets();\n  }, []);\n\n  // Map userId to user name for display purposes\n  const getUserById = (userId) => {\n    const user = users.find((user) => user.id === userId);\n    return user ? user.name : 'Unknown';\n  };\n\n  // Pass the tickets and user mapping to KanbanBoard\n  return (\n    <div className=\"app\">\n      <div className=\"controls\">\n        <label>\n          Group by:\n          <select value={groupBy} onChange={(e) => setGroupBy(e.target.value)}>\n            <option value=\"Status\">Status</option>\n            <option value=\"User\">User</option>\n            <option value=\"Priority\">Priority</option>\n          </select>\n        </label>\n\n        <label>\n          Sort by:\n          <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n            <option value=\"Priority\">Priority</option>\n            <option value=\"Title\">Title</option>\n          </select>\n        </label>\n      </div>\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <KanbanBoard tickets={tickets} groupBy={groupBy} sortBy={sortBy} getUserById={getUserById} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAChD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0DAA0D,CAAC;QACxF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCb,UAAU,CAACY,IAAI,CAACb,OAAO,CAAC;QACxBG,QAAQ,CAACU,IAAI,CAACX,KAAK,CAAC;QACpBO,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDL,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,WAAW,GAAIC,MAAM,IAAK;IAC9B,MAAMC,IAAI,GAAGjB,KAAK,CAACkB,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKH,MAAM,CAAC;IACrD,OAAOC,IAAI,GAAGA,IAAI,CAACG,IAAI,GAAG,SAAS;EACrC,CAAC;;EAED;EACA,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvB3B,OAAA;QAAA2B,QAAA,GAAO,WAEL,eAAA3B,OAAA;UAAQ4B,KAAK,EAAErB,OAAQ;UAACsB,QAAQ,EAAGC,CAAC,IAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAD,QAAA,gBAClE3B,OAAA;YAAQ4B,KAAK,EAAC,QAAQ;YAAAD,QAAA,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtCnC,OAAA;YAAQ4B,KAAK,EAAC,MAAM;YAAAD,QAAA,EAAC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClCnC,OAAA;YAAQ4B,KAAK,EAAC,UAAU;YAAAD,QAAA,EAAC;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAERnC,OAAA;QAAA2B,QAAA,GAAO,UAEL,eAAA3B,OAAA;UAAQ4B,KAAK,EAAEnB,MAAO;UAACoB,QAAQ,EAAGC,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAD,QAAA,gBAChE3B,OAAA;YAAQ4B,KAAK,EAAC,UAAU;YAAAD,QAAA,EAAC;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1CnC,OAAA;YAAQ4B,KAAK,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAELxB,OAAO,gBACNX,OAAA;MAAA2B,QAAA,EAAG;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBnC,OAAA,CAACF,WAAW;MAACK,OAAO,EAAEA,OAAQ;MAACI,OAAO,EAAEA,OAAQ;MAACE,MAAM,EAAEA,MAAO;MAACW,WAAW,EAAEA;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7F;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA1DID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4DT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}