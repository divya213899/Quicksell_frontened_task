{"ast":null,"code":"var _jsxFileName = \"/home/aashi/Desktop/kanban-board/src/components/KanbanBoard.js\";\n// src/components/KanbanBoard.js\nimport React from 'react';\nimport TicketCard from './TicketCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KanbanBoard({\n  tickets,\n  groupBy,\n  sortBy\n}) {\n  const groupTickets = tickets => {\n    // Group tickets based on `groupBy` and sort within each group.\n  };\n  const groupedTickets = groupTickets(tickets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.keys(groupedTickets).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), groupedTickets[group].map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n        ticket: ticket\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","TicketCard","jsxDEV","_jsxDEV","KanbanBoard","tickets","groupBy","sortBy","groupTickets","groupedTickets","className","children","Object","keys","map","group","fileName","_jsxFileName","lineNumber","columnNumber","ticket","id","_c","$RefreshReg$"],"sources":["/home/aashi/Desktop/kanban-board/src/components/KanbanBoard.js"],"sourcesContent":["// src/components/KanbanBoard.js\nimport React from 'react';\nimport TicketCard from './TicketCard';\n\nfunction KanbanBoard({ tickets, groupBy, sortBy }) {\n  const groupTickets = (tickets) => {\n    // Group tickets based on `groupBy` and sort within each group.\n  };\n\n  const groupedTickets = groupTickets(tickets);\n\n  return (\n    <div className=\"kanban-board\">\n      {Object.keys(groupedTickets).map(group => (\n        <div key={group} className=\"kanban-column\">\n          <h2>{group}</h2>\n          {groupedTickets[group].map(ticket => (\n            <TicketCard key={ticket.id} ticket={ticket} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default KanbanBoard;\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACjD,MAAMC,YAAY,GAAIH,OAAO,IAAK;IAChC;EAAA,CACD;EAED,MAAMI,cAAc,GAAGD,YAAY,CAACH,OAAO,CAAC;EAE5C,oBACEF,OAAA;IAAKO,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC,CAACK,GAAG,CAACC,KAAK,iBACpCZ,OAAA;MAAiBO,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxCR,OAAA;QAAAQ,QAAA,EAAKI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACfV,cAAc,CAACM,KAAK,CAAC,CAACD,GAAG,CAACM,MAAM,iBAC/BjB,OAAA,CAACF,UAAU;QAAiBmB,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC9C,CAAC;IAAA,GAJMJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,GAnBQlB,WAAW;AAqBpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}