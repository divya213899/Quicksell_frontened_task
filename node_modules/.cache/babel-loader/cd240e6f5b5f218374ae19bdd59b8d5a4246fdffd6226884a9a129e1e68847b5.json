{"ast":null,"code":"var _jsxFileName = \"/home/aashi/Desktop/kanban-board/src/components/KanbanBoard.js\";\n// // // src/components/KanbanBoard.js\n// // import React from 'react';\n// // import TicketCard from './TicketCard';\n\n// // function KanbanBoard({ tickets, groupBy, sortBy }) {\n// //   const groupTickets = (tickets) => {\n// //     // Group tickets based on `groupBy` and sort within each group.\n// //   };\n\n// //   const groupedTickets = groupTickets(tickets);\n\n// //   return (\n// //     <div className=\"kanban-board\">\n// //       {Object.keys(groupedTickets).map(group => (\n// //         <div key={group} className=\"kanban-column\">\n// //           <h2>{group}</h2>\n// //           {groupedTickets[group].map(ticket => (\n// //             <TicketCard key={ticket.id} ticket={ticket} />\n// //           ))}\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n\n// // export default KanbanBoard;\n\n// import React from 'react';\n// import TicketCard from './TicketCard';\n// //import { getUserNameById } from '../utils/helpers';\n\n// function KanbanBoard({ tickets, users, groupBy, sortBy }) {\n//   const groupTickets = (tickets) => {\n//     const grouped = tickets.reduce((acc, ticket) => {\n//       const key = ticket[groupBy];\n//       if (!acc[key]) acc[key] = [];\n//       acc[key].push(ticket);\n//       return acc;\n//     }, {});\n\n//     // Sort tickets within each group\n//     Object.keys(grouped).forEach(group => {\n//       grouped[group].sort((a, b) => {\n//         if (sortBy === 'priority') return b.priority - a.priority;\n//         if (sortBy === 'title') return a.title.localeCompare(b.title);\n//         return 0;\n//       });\n//     });\n//     return grouped;\n//   };\n\n//   const groupedTickets = groupTickets(tickets);\n\n//   return (\n//     <div className=\"kanban-board\">\n//       {Object.keys(groupedTickets).map(group => (\n//         <div key={group} className=\"kanban-column\">\n//           <h2>{groupBy.charAt(0).toUpperCase() + groupBy.slice(1)}: {group}</h2>\n//           {groupedTickets[group].map(ticket => (\n//             <TicketCard key={ticket.id} ticket={ticket} users={users} />\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default KanbanBoard;\n\nimport React from 'react';\nimport TicketCard from './TicketCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction KanbanBoard({\n  tickets,\n  groupBy\n}) {\n  const groupTickets = tickets => {\n    return tickets.reduce((acc, ticket) => {\n      const key = ticket[groupBy];\n      if (!acc[key]) acc[key] = [];\n      acc[key].push(ticket);\n      return acc;\n    }, {});\n  };\n  const groupedTickets = groupTickets(tickets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.keys(groupedTickets).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), groupedTickets[group].map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n        ticket: ticket\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","TicketCard","jsxDEV","_jsxDEV","KanbanBoard","tickets","groupBy","groupTickets","reduce","acc","ticket","key","push","groupedTickets","className","children","Object","keys","map","group","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/aashi/Desktop/kanban-board/src/components/KanbanBoard.js"],"sourcesContent":["// // // src/components/KanbanBoard.js\n// // import React from 'react';\n// // import TicketCard from './TicketCard';\n\n// // function KanbanBoard({ tickets, groupBy, sortBy }) {\n// //   const groupTickets = (tickets) => {\n// //     // Group tickets based on `groupBy` and sort within each group.\n// //   };\n\n// //   const groupedTickets = groupTickets(tickets);\n\n// //   return (\n// //     <div className=\"kanban-board\">\n// //       {Object.keys(groupedTickets).map(group => (\n// //         <div key={group} className=\"kanban-column\">\n// //           <h2>{group}</h2>\n// //           {groupedTickets[group].map(ticket => (\n// //             <TicketCard key={ticket.id} ticket={ticket} />\n// //           ))}\n// //         </div>\n// //       ))}\n// //     </div>\n// //   );\n// // }\n\n// // export default KanbanBoard;\n\n// import React from 'react';\n// import TicketCard from './TicketCard';\n// //import { getUserNameById } from '../utils/helpers';\n\n// function KanbanBoard({ tickets, users, groupBy, sortBy }) {\n//   const groupTickets = (tickets) => {\n//     const grouped = tickets.reduce((acc, ticket) => {\n//       const key = ticket[groupBy];\n//       if (!acc[key]) acc[key] = [];\n//       acc[key].push(ticket);\n//       return acc;\n//     }, {});\n\n//     // Sort tickets within each group\n//     Object.keys(grouped).forEach(group => {\n//       grouped[group].sort((a, b) => {\n//         if (sortBy === 'priority') return b.priority - a.priority;\n//         if (sortBy === 'title') return a.title.localeCompare(b.title);\n//         return 0;\n//       });\n//     });\n//     return grouped;\n//   };\n\n//   const groupedTickets = groupTickets(tickets);\n\n//   return (\n//     <div className=\"kanban-board\">\n//       {Object.keys(groupedTickets).map(group => (\n//         <div key={group} className=\"kanban-column\">\n//           <h2>{groupBy.charAt(0).toUpperCase() + groupBy.slice(1)}: {group}</h2>\n//           {groupedTickets[group].map(ticket => (\n//             <TicketCard key={ticket.id} ticket={ticket} users={users} />\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n  \n// export default KanbanBoard;\n\nimport React from 'react';\nimport TicketCard from './TicketCard';\n\nfunction KanbanBoard({ tickets, groupBy }) {\n  const groupTickets = (tickets) => {\n    return tickets.reduce((acc, ticket) => {\n      const key = ticket[groupBy];\n      if (!acc[key]) acc[key] = [];\n      acc[key].push(ticket);\n      return acc;\n    }, {});\n  };\n\n  const groupedTickets = groupTickets(tickets);\n\n  return (\n    <div className=\"kanban-board\">\n      {Object.keys(groupedTickets).map((group) => (\n        <div key={group} className=\"kanban-column\">\n          <h2>{group}</h2>\n          {groupedTickets[group].map((ticket) => (\n            <TicketCard key={ticket.id} ticket={ticket} />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default KanbanBoard;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,EAAE;EACzC,MAAMC,YAAY,GAAIF,OAAO,IAAK;IAChC,OAAOA,OAAO,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;MACrC,MAAMC,GAAG,GAAGD,MAAM,CAACJ,OAAO,CAAC;MAC3B,IAAI,CAACG,GAAG,CAACE,GAAG,CAAC,EAAEF,GAAG,CAACE,GAAG,CAAC,GAAG,EAAE;MAC5BF,GAAG,CAACE,GAAG,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;MACrB,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAED,MAAMI,cAAc,GAAGN,YAAY,CAACF,OAAO,CAAC;EAE5C,oBACEF,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BC,MAAM,CAACC,IAAI,CAACJ,cAAc,CAAC,CAACK,GAAG,CAAEC,KAAK,iBACrChB,OAAA;MAAiBW,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxCZ,OAAA;QAAAY,QAAA,EAAKI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACfV,cAAc,CAACM,KAAK,CAAC,CAACD,GAAG,CAAER,MAAM,iBAChCP,OAAA,CAACF,UAAU;QAAiBS,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACc,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC9C,CAAC;IAAA,GAJMJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACE,EAAA,GAxBQrB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}