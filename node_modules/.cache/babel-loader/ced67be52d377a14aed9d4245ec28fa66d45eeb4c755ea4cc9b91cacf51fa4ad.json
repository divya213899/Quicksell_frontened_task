{"ast":null,"code":"var _jsxFileName = \"/home/aashi/Desktop/kanban-board/src/components/KanbanBoard.js\";\n// KanbanBoard.js\nimport React from 'react';\nimport TicketCard from './TicketCard';\nimport { PRIORITY_LEVELS } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  tickets,\n  groupBy,\n  sortBy,\n  getUserById\n}) => {\n  // Define group keys based on selected group type\n  const getGroupKey = ticket => {\n    switch (groupBy) {\n      case 'Status':\n        return ticket.status;\n      case 'User':\n        return getUserById(ticket.userId);\n      case 'Priority':\n        return PRIORITY_LEVELS[ticket.priority] || 'No Priority';\n      default:\n        return ticket.status;\n    }\n  };\n\n  // Sorting logic\n  const sortTickets = (a, b) => {\n    switch (sortBy) {\n      case 'Priority':\n        return b.priority - a.priority;\n      // Higher priority first\n      case 'Title':\n        return a.title.localeCompare(b.title);\n      // Alphabetical order\n      default:\n        return 0;\n    }\n  };\n\n  // Group tickets based on the selected option\n  const groupedTickets = tickets.reduce((acc, ticket) => {\n    const groupKey = getGroupKey(ticket);\n    if (!acc[groupKey]) {\n      acc[groupKey] = [];\n    }\n    acc[groupKey].push(ticket);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: Object.keys(groupedTickets).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: group\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), groupedTickets[group].sort(sortTickets).map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n        ticket: ticket,\n        getUserById: getUserById\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this))]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","TicketCard","PRIORITY_LEVELS","jsxDEV","_jsxDEV","KanbanBoard","tickets","groupBy","sortBy","getUserById","getGroupKey","ticket","status","userId","priority","sortTickets","a","b","title","localeCompare","groupedTickets","reduce","acc","groupKey","push","className","children","Object","keys","map","group","fileName","_jsxFileName","lineNumber","columnNumber","sort","id","_c","$RefreshReg$"],"sources":["/home/aashi/Desktop/kanban-board/src/components/KanbanBoard.js"],"sourcesContent":["\n// KanbanBoard.js\nimport React from 'react';\nimport TicketCard from './TicketCard';\nimport { PRIORITY_LEVELS } from '../utils/constants';\n\nconst KanbanBoard = ({ tickets, groupBy, sortBy, getUserById }) => {\n  // Define group keys based on selected group type\n  const getGroupKey = (ticket) => {\n    switch (groupBy) {\n      case 'Status':\n        return ticket.status;\n      case 'User':\n        return getUserById(ticket.userId);\n      case 'Priority':\n        return PRIORITY_LEVELS[ticket.priority] || 'No Priority';\n      default:\n        return ticket.status;\n    }\n  };\n\n  // Sorting logic\n  const sortTickets = (a, b) => {\n    switch (sortBy) {\n      case 'Priority':\n        return b.priority - a.priority; // Higher priority first\n      case 'Title':\n        return a.title.localeCompare(b.title); // Alphabetical order\n      default:\n        return 0;\n    }\n  };\n\n  // Group tickets based on the selected option\n  const groupedTickets = tickets.reduce((acc, ticket) => {\n    const groupKey = getGroupKey(ticket);\n    if (!acc[groupKey]) {\n      acc[groupKey] = [];\n    }\n    acc[groupKey].push(ticket);\n    return acc;\n  }, {});\n\n  return (\n    <div className=\"kanban-board\">\n      {Object.keys(groupedTickets).map((group) => (\n        <div key={group} className=\"kanban-column\">\n          <h2>{group}</h2>\n          {groupedTickets[group]\n            .sort(sortTickets)\n            .map((ticket) => (\n              <TicketCard key={ticket.id} ticket={ticket} getUserById={getUserById} />\n            ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":";AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAY,CAAC,KAAK;EACjE;EACA,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC9B,QAAQJ,OAAO;MACb,KAAK,QAAQ;QACX,OAAOI,MAAM,CAACC,MAAM;MACtB,KAAK,MAAM;QACT,OAAOH,WAAW,CAACE,MAAM,CAACE,MAAM,CAAC;MACnC,KAAK,UAAU;QACb,OAAOX,eAAe,CAACS,MAAM,CAACG,QAAQ,CAAC,IAAI,aAAa;MAC1D;QACE,OAAOH,MAAM,CAACC,MAAM;IACxB;EACF,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC5B,QAAQT,MAAM;MACZ,KAAK,UAAU;QACb,OAAOS,CAAC,CAACH,QAAQ,GAAGE,CAAC,CAACF,QAAQ;MAAE;MAClC,KAAK,OAAO;QACV,OAAOE,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC;MAAE;MACzC;QACE,OAAO,CAAC;IACZ;EACF,CAAC;;EAED;EACA,MAAME,cAAc,GAAGd,OAAO,CAACe,MAAM,CAAC,CAACC,GAAG,EAAEX,MAAM,KAAK;IACrD,MAAMY,QAAQ,GAAGb,WAAW,CAACC,MAAM,CAAC;IACpC,IAAI,CAACW,GAAG,CAACC,QAAQ,CAAC,EAAE;MAClBD,GAAG,CAACC,QAAQ,CAAC,GAAG,EAAE;IACpB;IACAD,GAAG,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACb,MAAM,CAAC;IAC1B,OAAOW,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACElB,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BC,MAAM,CAACC,IAAI,CAACR,cAAc,CAAC,CAACS,GAAG,CAAEC,KAAK,iBACrC1B,OAAA;MAAiBqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxCtB,OAAA;QAAAsB,QAAA,EAAKI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACfd,cAAc,CAACU,KAAK,CAAC,CACnBK,IAAI,CAACpB,WAAW,CAAC,CACjBc,GAAG,CAAElB,MAAM,iBACVP,OAAA,CAACH,UAAU;QAAiBU,MAAM,EAAEA,MAAO;QAACF,WAAW,EAAEA;MAAY,GAApDE,MAAM,CAACyB,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CACxE,CAAC;IAAA,GANIJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GAnDIhC,WAAW;AAqDjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}